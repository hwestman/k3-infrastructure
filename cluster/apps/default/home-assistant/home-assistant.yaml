---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
  namespace: default
spec:
  ports:
    - name: home-assistant
      protocol: TCP
      targetPort: 8123
      port: 8123
    - name: ha-code
      protocol: TCP
      targetPort: 8080
      port: 8080
    - name: sonos
      protocol: TCP
      targetPort: 1400
      port: 1400
  selector:
    app: home-assistant
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    external-dns/is-public: "true"
    hajimari.io/enable: "true"
    hajimari.io/icon: "home-assistant"
    nginx.org/websocket-services: home-assistant
  name: home-assistant
  namespace: default
spec:
  rules:
    - host: ha.j-burg11.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: home-assistant
                port:
                  number: 8123
  tls:
    - hosts:
        - ha.j-burg11.dev
      secretName: ha-tls-prod

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    external-dns/is-public: "true"
    hajimari.io/enable: "true"
    hajimari.io/icon: "code-tags"
  name: ha-code
  namespace: default
spec:
  rules:
    - host: ha-code.j-burg11.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: home-assistant
                port:
                  number: 8080
  tls:
    - hosts:
        - ha-code.j-burg11.dev
      secretName: ha-code-tls-prod

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: home-assistant
  namespace: default
spec:
  serviceName: home-assistant
  replicas: 1
  selector:
    matchLabels:
      app: home-assistant
  template:
    metadata:
      labels:
        app: home-assistant
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: home-assistant
          image: homeassistant/home-assistant:2023.4.2
          imagePullPolicy: Always
          env:
            - name: TZ
              value: Europe/Oslo
          volumeMounts:
            - mountPath: /config
              name: home-assistant-volume
          securityContext:
            runAsUser: 0
        - name: ha-code
          image: codercom/code-server:latest
          imagePullPolicy: Always
          args:
            - '--port=8080'
            - '--extensions-dir=/config/.vscode'
            - '--user-data-dir=/config/.vscode'
            - /config
          workingDir: /config
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ha-code-password
                  key: password
          volumeMounts:
            - mountPath: /config
              name: home-assistant-volume
          securityContext:
            runAsUser: 0
      volumes:
        - name: home-assistant-volume
          persistentVolumeClaim:
            claimName: home-assistant-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: home-assistant-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
  volumeName: home-assistant-pv

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: home-assistant-pv
  namespace: default
spec:
  storageClassName: longhorn
  # by default, the volume will be not deleted if you delete the PVC, change to
  # "Delete" if you wish the volume to be deleted automatically with the PVC
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: home-assistant
