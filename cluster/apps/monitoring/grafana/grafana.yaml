---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: grafana
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.org/websocket-services: grafana
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    external-dns/is-public: "true"
    hajimari.io/enable: "true"
    hajimari.io/icon: "chart-areaspline"
  name: grafana
  namespace: default
spec:
  rules:
    - host: grafana.j-burg11.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: grafana
                port:
                  number: 3000
  tls:
    - hosts:
        - grafana.j-burg11.dev
      secretName: grafana-tls-prod
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: default
spec:
  serviceName: "grafana"
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
          - 1000
      containers:
        - env:
            - name: TZ
              value: 'Europe/Oslo'
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: password
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: 'true'
            - name: GF_SECURITY_COOKIE_SAMESITE
              value: 'lax'
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: 'true'
            - name: GF_AUTH_ANONYMOUS_ORG_NAME
              value: 'Main Org.'
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: 'Viewer'
          image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-volume-1

        # securityContext:
        #   runAsUser: 472
        # securityContext:
        #   runAsUser: 472
          #privileged: true
          #runAsUser: 472
      volumes:
        - name: grafana-volume-1
          persistentVolumeClaim:
            claimName: grafana-pvc
      # securityContext:
      #   fsGroup: 472
        # runAsUser: 472
        # runAsGroup: 472
      # resources:
      #   limits:
      #     cpu: "1"
      #     memory: 1Gi
      #   requests:
      #     cpu: 200m
      #     memory: 200Mi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: grafana-pvc
  namespace: default
spec:
  storageClassName: longhorn
  volumeName: grafana-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: grafana-pv
  namespace: default
spec:
  storageClassName: longhorn
  # by default, the volume will be not deleted if you delete the PVC, change to
  # "Delete" if you wish the volume to be deleted automatically with the PVC
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: grafana
