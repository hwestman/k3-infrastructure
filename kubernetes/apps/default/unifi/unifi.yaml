---
apiVersion: v1
kind: Service
metadata:
  name: unifi-inform
  namespace: default
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.1.222
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: unifi-controller
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller
  namespace: default
spec:
  ports:
    - protocol: TCP
      targetPort: 8443
      port: 443
  selector:
    app: unifi-controller
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-http
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 8080
      nodePort: 30808
  selector:
    app: unifi-controller
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-stun
  namespace: default
spec:
  ports:
    - protocol: UDP
      port: 3478
      nodePort: 30347
  selector:
    app: unifi-controller
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-device
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 8880
      nodePort: 30888
  selector:
    app: unifi-controller
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-discovery
  namespace: default
spec:
  ports:
    - protocol: UDP
      port: 10001
      nodePort: 30100
  selector:
    app: unifi-controller
  type: NodePort
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-production
#     # nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.1.133
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#   name: unifi-controller
#   namespace: default
# spec:
#   rules:
#     - host: "unifi.j-burg11.dev"
#       http:
#         paths:
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: unifi-controller
#                 port:
#                   number: 443
#   tls:
#     - hosts:
#         - unifi.j-burg11.dev
#       secretName: unifi-tls-prod


#---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    hajimari.io/enable: "true"
    hajimari.io/icon: "content-save"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  name: unifi
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: unifi.j-burg11.dev
      http:
        paths:
          - backend:
              service:
                name: unifi-controller
                port:
                  number: 443
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - unifi.j-burg11.dev
      secretName: unifi-tls-prod


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unifi-controller
  namespace: default
spec:
  serviceName: "unifi-controller"
  replicas: 1
  selector:
    matchLabels:
      app: unifi-controller
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: unifi-controller
    spec:
      containers:
        - image: jacobalberty/unifi:v7.4
          imagePullPolicy: Always
          name: unifi-controller
          volumeMounts:
            - mountPath: /unifi
              name: unifi-volume
      volumes:
        - name: unifi-volume
          persistentVolumeClaim:
            claimName: unifi-pvc
            # resources:
      #   limits:
      #     cpu: "1"
      #     memory: 1Gi
      #   requests:
      #     cpu: 200m
      #     memory: 200Mi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: unifi-pvc
  namespace: default
spec:
  storageClassName: longhorn
  volumeName: unifi-controller-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: unifi-controller-pv
  namespace: default
spec:
  storageClassName: longhorn
  # by default, the volume will be not deleted if you delete the PVC, change to
  # "Delete" if you wish the volume to be deleted automatically with the PVC
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: unifi-controller
