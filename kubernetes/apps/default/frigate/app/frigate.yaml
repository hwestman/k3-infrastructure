---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    # external-dns/is-public: "true"
    hajimari.io/enable: "true"
    # hajimari.io/icon: "home-assistant"
    nginx.org/websocket-services: frigate-rtmp
  name: frigate
  namespace: default
spec:
  ingressClassName: "nginx"
  rules:
    - host: frigate.j-burg11.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: frigate
                port:
                  number: 5000
  tls:
    - hosts:
        - frigate.j-burg11.dev
      secretName: frigate-tls-prod

---

apiVersion: v1
kind: Service
metadata:
  name: frigate
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: frigate

---
apiVersion: v1
kind: Service
metadata:
  name: frigate-rtmp
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 1935
      targetPort: 1935
  selector:
    app: frigate
---

apiVersion: v1
kind: Service
metadata:
  name: frigate-rtsp
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 8554
      targetPort: 8554
  selector:
    app: frigate

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frigate
  namespace: default
spec:
  serviceName: "frigate"
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
    spec:
      containers:
        - image: ghcr.io/blakeblackshear/frigate:stable
          imagePullPolicy: Always
          name: frigate
          devices:
            - /dev/apex_0:/dev/apex_0
          volumeMounts:
            - mountPath: /media/frigate
              name: frigate-volume
            - mountPath: /config
              name: frigate-config-volume

          env:
            - name: FRIGATE_RTSP_PASSWORD
              value: ''
          securityContext:
            privileged: true
      volumes:
        - name: frigate-volume
          persistentVolumeClaim:
            claimName: frigate-pvc
        - name: frigate-config-volume
          persistentVolumeClaim:
            claimName: frigate-config-pvc
      tolerations:
        - key: "coral"
          operator: "Exists"
          effect: "NoExecute"
      nodeSelector:
        accelerator: coral

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-pvc
  namespace: default
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi

# ---

# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: frigate-pv
#   namespace: default
# spec:
#   storageClassName: longhorn
#   # by default, the volume will be not deleted if you delete the PVC, change to
#   # "Delete" if you wish the volume to be deleted automatically with the PVC
#   persistentVolumeReclaimPolicy: Retain
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadWriteOnce
#   csi:
#     driver: driver.longhorn.io
#     fsType: ext4
#     volumeHandle: frigate

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-config-pvc
  namespace: default
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# ---

# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: frigate-config-pv
#   namespace: default
# spec:
#   storageClassName: longhorn
#   # by default, the volume will be not deleted if you delete the PVC, change to
#   # "Delete" if you wish the volume to be deleted automatically with the PVC
#   persistentVolumeReclaimPolicy: Retain
#   capacity:
#     storage: 1Gi
#   accessModes:
#     - ReadWriteOnce
#   csi:
#     driver: driver.longhorn.io
#     fsType: ext4
#     volumeHandle: frigate-config
