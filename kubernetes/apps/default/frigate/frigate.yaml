---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    # external-dns/is-public: "true"
    hajimari.io/enable: "true"
    # hajimari.io/icon: "home-assistant"
    nginx.org/websocket-services: frigate-rtmp
  name: frigate
  namespace: default
spec:
  rules:
    - host: frigate.j-burg11.dev
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: frigate
                port:
                  number: 5000
  tls:
    - hosts:
        - frigate.j-burg11.dev
      secretName: frigate-tls-prod

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.org/websocket-services: frigate-rtmp
#     cert-manager.io/cluster-issuer: letsencrypt-production
#     nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.1.0/24
#     # type of authentication
#     #nginx.ingress.kubernetes.io/auth-type: basic
#     # name of the secret that contains the user/password definitions
#     #nginx.ingress.kubernetes.io/auth-secret: basic-auth
#     # message to display with an appropriate context why the authentication is required
#     #nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'

#   name: frigate
#   namespace: default
# spec:
#   # defaultBackend:
#   #   service:
#   #     name: unifi-video-http
#   #     port:
#   #       number: 7080
#   rules:
#   - host: "frigate.j-burg11.dev"
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: frigate
#             port:
#               number: 5000
#   tls:
#   - hosts:
#     - frigate.j-burg11.dev
#     secretName: frigate-tls-prod

---

apiVersion: v1
kind: Service
metadata:
  name: frigate
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: frigate

---

apiVersion: v1
kind: Service
metadata:
  name: frigate-rtmp
  namespace: default
spec:
  selector:
    app: frigate
  ports:
    - protocol: TCP
      port: 1935

---

apiVersion: v1
kind: Service
metadata:
  name: frigate-threek
  namespace: default
spec:
  selector:
    app: frigate
  ports:
    - protocol: TCP
      port: 3000

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frigate
  namespace: default
spec:
  serviceName: "frigate"
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
    spec:
      containers:
        - image: ghcr.io/blakeblackshear/frigate:stable
          imagePullPolicy: Always
          name: frigate
          devices:
            - /dev/apex_0:/dev/apex_0
          volumeMounts:
            - mountPath: /media/frigate
              name: frigate-volume
            - mountPath: /config
              name: frigate-config-volume
            # - mountPath: /config
            #   name: frigate-config-volume
          env:
            - name: FRIGATE_RTSP_PASSWORD
              value: ''
          securityContext:
            privileged: true
      volumes:
        - name: frigate-volume
          persistentVolumeClaim:
            claimName: frigate-claim
        - name: frigate-config-volume
          persistentVolumeClaim:
            claimName: frigate-config-claim
        # - name: frigate-config-volume
        #   configMap:
        #     name: frigate-conf
      tolerations:
        - key: "coral"
          operator: "Exists"
          effect: "NoExecute"
      nodeSelector:
        accelerator: coral

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-claim
  namespace: default
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-config-claim
  namespace: default
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
